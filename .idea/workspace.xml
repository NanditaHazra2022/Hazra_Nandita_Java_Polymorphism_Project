<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9fd028bc-10a1-4eb6-b783-5502bff84b92" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/main/java/OperatorOverloading.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2G8ybmNHELvCX2rFvrdTkCfg3j3" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="Application.OperatorOverloading">
    <configuration name="OperatorOverloading" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="OperatorOverloading" />
      <module name="Hazra_Nandita_Java_Polymorphism_Project" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UpGradCompileTimePolymorphismMethodOverloading" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="UpGradCompileTimePolymorphismMethodOverloading" />
      <module name="Hazra_Nandita_Java_Polymorphism_Project" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.OperatorOverloading" />
        <item itemvalue="Application.UpGradCompileTimePolymorphismMethodOverloading" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9fd028bc-10a1-4eb6-b783-5502bff84b92" name="Changes" comment="" />
      <created>1665784579107</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1665784579107</updated>
    </task>
    <task id="LOCAL-00001" summary="Added Java program: MethodOverloading.java to demonstrate compile type polymorphism by method overloading.">
      <created>1665786239178</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1665786239178</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Added Java program: MethodOverloading.java to demonstrate compile type polymorphism by method overloading." />
    <option name="LAST_COMMIT_MESSAGE" value="Added Java program: MethodOverloading.java to demonstrate compile type polymorphism by method overloading." />
  </component>
</project>